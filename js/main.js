// 1. –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –æ–±'—î–¥–Ω—É—î –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–∏–Ω —Ä—è–¥–æ–∫. –ï–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å. –ù–µ—Ö–∞–π –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–æ—é. üîΩ
// –ß–µ—Ä–µ–∑ for :

const friends = ['Mango', 'Poly', 'Kiwi', 'Ajax'];
let string = '';

for (let i = 0; i < friends.length; i++) {
  string += friends[i];
  if (i < friends.length - 1) {
    string += ',';
  }
}

console.log(string); 

// –ß–µ—Ä–µ–∑ join :

const friendsJoin = ['Mango', 'Poly', 'Kiwi', 'Ajax'];
let stringJoin = friendsJoin.join(', ');
console.log(stringJoin);


// 2. –ü—Ä–∞—Ü—é—î–º–æ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –∫–∞—Ä—Ç–æ–∫ –≤ trello. –ú–µ—Ç–æ–¥ splice() üîΩ

const cards = [
  '–ö–∞—Ä—Ç–æ—á–∫–∞-1',
  '–ö–∞—Ä—Ç–æ—á–∫–∞-2',
  '–ö–∞—Ä—Ç–æ—á–∫–∞-3',
  '–ö–∞—Ä—Ç–æ—á–∫–∞-4',
  '–ö–∞—Ä—Ç–æ—á–∫–∞-5'
];

const cardToRemove = '–ö–∞—Ä—Ç–æ—á–∫–∞-3';
const cardToInsert = '–ö–∞—Ä—Ç–æ—á–∫–∞-6';
const cardToUpdate = '–ö–∞—Ä—Ç–æ—á–∫–∞-4';

for (let i = 0; i < cards.length; i++) {
  // –í–∏–¥–∞–ª–∏—Ç–∏
  if (cards[i] === cardToRemove) {
      cards.splice(i, 1);
      i--; 
      console.log('–í–∏–¥–∞–ª–µ–Ω–æ:', cards);
      continue; 
  }

  // –î–æ–¥–∞—Ç–∏
  if (cards[i] === '–ö–∞—Ä—Ç–æ—á–∫–∞-2' && !cards.includes(cardToInsert)) {
      cards.splice(i + 1, 0, cardToInsert); 
      console.log('–î–æ–¥–∞–Ω–æ:', cards);
      continue;
  }

  // –û–Ω–æ–≤–∏—Ç–∏
  if (cards[i] === cardToUpdate) {
      cards[i] = '–û–Ω–æ–≤–ª–µ–Ω–∞-' + cardToUpdate; 
      console.log('–û–Ω–æ–≤–ª–µ–Ω–æ:', cards);
  }
}
// // 3. –í–∏–¥–∞–ª–∏—Ç–∏  üîΩ

// cards.splice(0,1);
// console.log(cards);

// // 4. –î–æ–¥–∞—Ç–∏ üîΩ

// cards.push('–ö–∞—Ä—Ç–æ—á–∫–∞-6')
// console.log(cards);

// // 5. –û–Ω–æ–≤–∏—Ç–∏ üîΩ

// cards.splice(4,1,'–ö–∞—Ä—Ç–æ—á–∫–∞-4')
// console.log(cards)
